$date
	Sat Aug 19 18:27:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Core_Sequential $end
$var wire 2 ! writeback_output_select [1:0] $end
$var wire 32 " writeback_output [31:0] $end
$var wire 5 # write_index [4:0] $end
$var wire 1 $ write_enable $end
$var wire 5 % read_index_2 [4:0] $end
$var wire 5 & read_index_1 [4:0] $end
$var wire 1 ' read_enable_2 $end
$var wire 1 ( read_enable_1 $end
$var wire 32 ) read_data_2 [31:0] $end
$var wire 32 * read_data_1 [31:0] $end
$var wire 7 + opcode [6:0] $end
$var wire 32 , next_PC [31:0] $end
$var wire 2 - mux2_select [1:0] $end
$var wire 1 . mux1_select $end
$var wire 1 / lsu_enable $end
$var wire 32 0 load_data [31:0] $end
$var wire 3 1 instruction_type [2:0] $end
$var wire 32 2 immediate [31:0] $end
$var wire 1 3 funct7_valid $end
$var wire 7 4 funct7 [6:0] $end
$var wire 1 5 funct3_valid $end
$var wire 3 6 funct3 [2:0] $end
$var wire 32 7 fetched_instruction_reg [31:0] $end
$var wire 1 8 fetch_enable $end
$var wire 1 9 fetch_done $end
$var wire 32 : alu_output [31:0] $end
$var wire 1 ; address_type $end
$var wire 32 < address [31:0] $end
$var reg 1 = CLK $end
$var reg 32 > PC [31:0] $end
$var reg 32 ? address_reg [31:0] $end
$var reg 32 @ bus_rs1 [31:0] $end
$var reg 32 A bus_rs2 [31:0] $end
$var reg 1 B enable_fetch $end
$var reg 32 C instruction [31:0] $end
$var reg 1 D jump_branch_enable $end
$var reg 1 E reset $end
$var reg 32 F write_data [31:0] $end
$scope module ALU $end
$var wire 32 G PC [31:0] $end
$var wire 32 H rs1 [31:0] $end
$var wire 32 I rs2 [31:0] $end
$var wire 7 J opcode [6:0] $end
$var wire 2 K mux2_select [1:0] $end
$var wire 1 . mux1_select $end
$var wire 32 L immediate [31:0] $end
$var wire 7 M funct7 [6:0] $end
$var wire 3 N funct3 [2:0] $end
$var reg 32 O alu_output [31:0] $end
$var reg 32 P operand_1 [31:0] $end
$var reg 32 Q operand_2 [31:0] $end
$upscope $end
$scope module LSU $end
$var wire 1 = CLK $end
$var wire 32 R data [31:0] $end
$var wire 32 S store_data [31:0] $end
$var wire 7 T opcode [6:0] $end
$var wire 1 U memory_done $end
$var wire 3 V funct3 [2:0] $end
$var wire 1 / enable $end
$var wire 32 W address [31:0] $end
$var reg 4 X frame_mask [3:0] $end
$var reg 32 Y load_data [31:0] $end
$var reg 1 Z memory_state $end
$scope module data_memory $end
$var wire 1 = CLK $end
$var wire 32 [ address [31:0] $end
$var wire 32 \ data [31:0] $end
$var wire 4 ] frame_mask [3:0] $end
$var wire 1 Z memory_state $end
$var wire 1 / enable $end
$var parameter 4 ^ B_0001 $end
$var parameter 4 _ B_0010 $end
$var parameter 4 ` B_0100 $end
$var parameter 4 a B_1000 $end
$var parameter 4 b FINISH $end
$var parameter 4 c H_0011_1 $end
$var parameter 4 d H_0011_2 $end
$var parameter 4 e H_1100_1 $end
$var parameter 4 f H_1100_2 $end
$var parameter 1 g READ $end
$var parameter 4 h STABLE $end
$var parameter 1 i WRITE $end
$var parameter 4 j W_1111_1 $end
$var parameter 4 k W_1111_2 $end
$var parameter 4 l W_1111_3 $end
$var parameter 4 m W_1111_4 $end
$var reg 32 n data_in [31:0] $end
$var reg 1 U memory_done $end
$var reg 4 o next_state [3:0] $end
$var reg 4 p state [3:0] $end
$upscope $end
$upscope $end
$scope module address_generator $end
$var wire 32 q PC [31:0] $end
$var wire 32 r bus_rs1 [31:0] $end
$var wire 32 s immediate [31:0] $end
$var wire 32 t data [31:0] $end
$var wire 1 ; address_type $end
$var wire 32 u address [31:0] $end
$upscope $end
$scope module control_unit $end
$var wire 7 v opcode [6:0] $end
$var wire 3 w instruction_type [2:0] $end
$var wire 7 x funct7 [6:0] $end
$var wire 3 y funct3 [2:0] $end
$var reg 1 ; address_type $end
$var reg 1 8 fetch_enable $end
$var reg 1 / lsu_enable $end
$var reg 1 . mux1_select $end
$var reg 2 z mux2_select [1:0] $end
$var reg 1 ( read_enable_1 $end
$var reg 1 ' read_enable_2 $end
$var reg 1 $ write_enable $end
$var reg 2 { writeback_output_select [1:0] $end
$upscope $end
$scope module fetch_unit $end
$var wire 1 = CLK $end
$var wire 32 | PC [31:0] $end
$var wire 32 } address [31:0] $end
$var wire 1 B enable $end
$var wire 1 D jump_branch_enable $end
$var wire 32 ~ next_PC [31:0] $end
$var wire 32 !" fetched_instruction [31:0] $end
$var wire 1 9 fetch_done $end
$var reg 32 "" fetched_instruction_reg [31:0] $end
$scope module instruction_memory $end
$var wire 1 = CLK $end
$var wire 32 #" address [31:0] $end
$var wire 32 $" data [31:0] $end
$var wire 1 B enable $end
$var wire 4 %" frame_mask [3:0] $end
$var wire 1 &" memory_state $end
$var parameter 4 '" B_0001 $end
$var parameter 4 (" B_0010 $end
$var parameter 4 )" B_0100 $end
$var parameter 4 *" B_1000 $end
$var parameter 4 +" FINISH $end
$var parameter 4 ," H_0011_1 $end
$var parameter 4 -" H_0011_2 $end
$var parameter 4 ." H_1100_1 $end
$var parameter 4 /" H_1100_2 $end
$var parameter 1 0" READ $end
$var parameter 4 1" STABLE $end
$var parameter 1 2" WRITE $end
$var parameter 4 3" W_1111_1 $end
$var parameter 4 4" W_1111_2 $end
$var parameter 4 5" W_1111_3 $end
$var parameter 4 6" W_1111_4 $end
$var reg 32 7" data_in [31:0] $end
$var reg 1 9 memory_done $end
$var reg 4 8" next_state [3:0] $end
$var reg 4 9" state [3:0] $end
$upscope $end
$upscope $end
$scope module immediate_generator $end
$var wire 32 :" instruction [31:0] $end
$var wire 3 ;" instruction_type [2:0] $end
$var reg 32 <" immediate [31:0] $end
$upscope $end
$scope module instruction_decoder $end
$var wire 1 =" branch_signal $end
$var wire 1 5 funct3_valid $end
$var wire 1 3 funct7_valid $end
$var wire 32 >" instruction [31:0] $end
$var wire 1 ?" instruction_type_i $end
$var wire 1 @" instruction_type_r $end
$var wire 5 A" write_index [4:0] $end
$var wire 5 B" read_index_2 [4:0] $end
$var wire 5 C" read_index_1 [4:0] $end
$var wire 7 D" opcode [6:0] $end
$var wire 1 E" instruction_type_u $end
$var wire 1 F" instruction_type_s $end
$var wire 1 G" instruction_type_j $end
$var wire 1 H" instruction_type_b $end
$var wire 3 I" instruction_type [2:0] $end
$var wire 7 J" funct7 [6:0] $end
$var wire 3 K" funct3 [2:0] $end
$upscope $end
$scope module reg_file $end
$var wire 1 = CLK $end
$var wire 1 ( read_enable_1 $end
$var wire 1 ' read_enable_2 $end
$var wire 5 L" read_index_1 [4:0] $end
$var wire 5 M" read_index_2 [4:0] $end
$var wire 32 N" write_data [31:0] $end
$var wire 1 $ write_enable $end
$var wire 5 O" write_index [4:0] $end
$var reg 32 P" read_data_1 [31:0] $end
$var reg 32 Q" read_data_2 [31:0] $end
$var integer 32 R" i [31:0] $end
$upscope $end
$scope module wb_mux $end
$var wire 32 S" execution_output [31:0] $end
$var wire 32 T" immediate [31:0] $end
$var wire 32 U" load_data [31:0] $end
$var wire 2 V" writeback_output_select [1:0] $end
$var reg 32 W" writeback_output [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1100 6"
b1011 5"
b1010 4"
b1001 3"
12"
b0 1"
00"
b1000 /"
b111 ."
b110 -"
b101 ,"
b1101 +"
b100 *"
b11 )"
b10 ("
b1 '"
b1100 m
b1011 l
b1010 k
b1001 j
1i
b0 h
0g
b1000 f
b111 e
b110 d
b101 c
b1101 b
b100 a
b11 `
b10 _
b1 ^
$end
#0
$dumpvars
bx W"
bx V"
bx U"
bz T"
bx S"
b100000 R"
bz Q"
bz P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
xH"
xG"
xF"
xE"
bx D"
bx C"
bx B"
bx A"
x@"
x?"
bx >"
x="
bz <"
bx ;"
bx :"
b0 9"
b1001 8"
bz 7"
0&"
b1111 %"
bz $"
bx #"
bx ""
bz !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bz s
bx r
bx q
b0 p
bx o
bz n
bx ]
bx \
bx00 [
xZ
bx Y
bx X
bx W
bx V
0U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bz L
bx K
bx J
bx I
bx H
bx G
bx F
1E
xD
bx C
xB
bx A
bx @
bx ?
bx >
1=
bx <
z;
bx :
09
x8
bx 7
bx 6
x5
bx 4
x3
bz 2
bx 1
bx 0
0/
x.
bx -
bx ,
bx +
bz *
bz )
x(
x'
bx &
bx %
x$
bx #
bx "
bx !
$end
#1
0=
#2
b11111111111111111111111111111100 >
b11111111111111111111111111111100 G
b11111111111111111111111111111100 q
b11111111111111111111111111111100 |
b11111111111111111111111111111100 #"
1=
#3
0=
#4
1=
#5
0=
#6
1=
#7
0=
#8
1=
#9
0=
#10
1=
#11
0=
#12
1=
#13
0=
#14
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
bx >
bx G
bx q
bx |
bx #"
b1001 9"
1=
1B
0E
#15
0=
#16
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#17
0=
#18
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#19
0=
#20
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#21
0=
#22
b0 8"
19
b1101 9"
1=
#23
0=
#24
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#25
0=
#26
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#27
0=
#28
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#29
0=
#30
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#31
0=
#32
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#33
0=
#34
b0 8"
19
b1101 9"
1=
#35
0=
#36
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#37
0=
#38
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#39
0=
#40
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#41
0=
#42
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#43
0=
#44
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#45
0=
#46
b0 8"
19
b1101 9"
1=
#47
0=
#48
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#49
0=
#50
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#51
0=
#52
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#53
0=
#54
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#55
0=
#56
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#57
0=
#58
b0 8"
19
b1101 9"
1=
#59
0=
#60
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#61
0=
#62
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#63
0=
#64
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#65
0=
#66
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#67
0=
#68
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#69
0=
#70
b0 8"
19
b1101 9"
1=
#71
0=
#72
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
b0 ?
#73
0=
#74
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#75
0=
#76
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#77
0=
#78
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#79
0=
#80
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#81
0=
#82
b0 8"
19
b1101 9"
1=
#83
0=
#84
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#85
0=
#86
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#87
0=
#88
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#89
0=
#90
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#91
0=
#92
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#93
0=
#94
b0 8"
19
b1101 9"
1=
#95
0=
#96
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#97
0=
#98
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#99
0=
#100
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#101
0=
#102
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#103
0=
#104
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#105
0=
#106
b0 8"
19
b1101 9"
1=
#107
0=
#108
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#109
0=
#110
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#111
0=
#112
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#113
0=
#114
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#115
0=
#116
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#117
0=
#118
b0 8"
19
b1101 9"
1=
#119
0=
#120
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#121
0=
#122
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#123
0=
#124
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#125
0=
#126
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#127
0=
#128
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#129
0=
#130
b0 8"
19
b1101 9"
1=
#131
0=
#132
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#133
0=
#134
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#135
0=
#136
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#137
0=
#138
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#139
0=
#140
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#141
0=
#142
b0 8"
19
b1101 9"
1=
#143
0=
#144
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#145
0=
#146
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#147
0=
#148
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#149
0=
#150
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#151
0=
#152
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#153
0=
#154
b0 8"
19
b1101 9"
1=
#155
0=
#156
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#157
0=
#158
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#159
0=
#160
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
#161
0=
#162
b1100 8"
bxzzzzzzzz !"
bxzzzzzzzz $"
bxzzzzzzzz 7"
b1011 9"
1=
#163
0=
#164
b1101 8"
bx !"
bx $"
bx 7"
b1100 9"
1=
#165
0=
#166
b0 8"
19
b1101 9"
1=
#167
0=
#168
b1001 8"
bz !"
bz $"
bz 7"
09
b0 9"
1=
#169
0=
#170
b1010 8"
bxzzzzzzzzzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzzzzzzzzzz 7"
b1001 9"
1=
#171
0=
#172
b1011 8"
bxzzzzzzzzzzzzzzzz !"
bxzzzzzzzzzzzzzzzz $"
bxzzzzzzzzzzzzzzzz 7"
b1010 9"
1=
