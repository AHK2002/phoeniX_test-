$date
	Mon Aug 14 10:31:16 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module TB_Fetch $end
$var wire 32 ! instruction [31:0] $end
$var wire 1 " fetch_done $end
$var reg 1 # CLK $end
$var reg 1 $ Reset $end
$var reg 32 % address [31:0] $end
$var reg 1 & branch_enable $end
$var reg 1 ' enable $end
$var reg 32 ( instruction_reg [31:0] $end
$var reg 1 ) jump_enable $end
$scope module uut $end
$var wire 1 # CLK $end
$var wire 1 $ Reset $end
$var wire 32 * address [31:0] $end
$var wire 1 & branch_enable $end
$var wire 1 ' enable $end
$var wire 32 + instruction [31:0] $end
$var wire 1 ) jump_enable $end
$var wire 32 , next_PC [31:0] $end
$var wire 1 " fetch_done $end
$var wire 32 - PC [31:0] $end
$scope module instruction_memory $end
$var wire 1 # CLK $end
$var wire 32 . address [31:0] $end
$var wire 32 / data [31:0] $end
$var wire 1 ' enable $end
$var wire 4 0 frame_mask [3:0] $end
$var wire 1 1 memory_state $end
$var parameter 4 2 B_0001 $end
$var parameter 4 3 B_0010 $end
$var parameter 4 4 B_0100 $end
$var parameter 4 5 B_1000 $end
$var parameter 4 6 FINISH $end
$var parameter 4 7 H_0011_1 $end
$var parameter 4 8 H_0011_2 $end
$var parameter 4 9 H_1100_1 $end
$var parameter 4 : H_1100_2 $end
$var parameter 1 ; READ $end
$var parameter 4 < STABLE $end
$var parameter 1 = WRITE $end
$var parameter 4 > W_1111_1 $end
$var parameter 4 ? W_1111_2 $end
$var parameter 4 @ W_1111_3 $end
$var parameter 4 A W_1111_4 $end
$var reg 32 B data_in [31:0] $end
$var reg 1 " memory_done $end
$var reg 4 C next_state [3:0] $end
$var reg 4 D state [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1100 A
b1011 @
b1010 ?
b1001 >
1=
b0 <
0;
b1000 :
b111 9
b110 8
b101 7
b1101 6
b100 5
b11 4
b10 3
b1 2
$end
#0
$dumpvars
bx D
bx C
bx B
01
b1111 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
bz (
x'
x&
bx %
x$
0#
x"
bx !
$end
#1
bz !
bz +
bz /
bz B
0"
b1001 C
b0 D
1#
#2
0#
#3
1#
#4
0#
#5
1#
#6
0#
#7
1#
#8
0#
#9
1#
#10
b1001 C
b0 ,
b111111111111111111111111111111 .
b11111111111111111111111111111100 -
0#
0)
0&
b0 %
b0 *
1'
1$
#11
bxzzzzzzzzzzzzzzzzzzzzzzzz !
bxzzzzzzzzzzzzzzzzzzzzzzzz +
bxzzzzzzzzzzzzzzzzzzzzzzzz /
bxzzzzzzzzzzzzzzzzzzzzzzzz B
b1010 C
b1001 D
1#
#12
0#
#13
bxzzzzzzzzzzzzzzzz !
bxzzzzzzzzzzzzzzzz +
bxzzzzzzzzzzzzzzzz /
bxzzzzzzzzzzzzzzzz B
b1011 C
b1010 D
1#
#14
0#
#15
bxzzzzzzzz !
bxzzzzzzzz +
bxzzzzzzzz /
bxzzzzzzzz B
b1100 C
b1011 D
1#
#16
0#
#17
bx !
bx +
bx /
bx B
b1101 C
b1100 D
1#
#18
0#
#19
1"
b0 C
b1101 D
1#
#20
