$date
	Thu Oct 05 13:30:28 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Multiplier_Unit_TB $end
$var wire 1 ! mul_unit_busy $end
$var wire 32 " mul_output [31:0] $end
$var parameter 32 # MUL_APX_ACC_CONTROL $end
$var parameter 32 $ MUL_USER_DESIGN $end
$var parameter 32 % MUL_X_EXTENISION $end
$var reg 1 & CLK $end
$var reg 8 ' accuracy_level [7:0] $end
$var reg 3 ( funct3 [2:0] $end
$var reg 7 ) funct7 [6:0] $end
$var reg 7 * opcode [6:0] $end
$var reg 32 + rs1 [31:0] $end
$var reg 32 , rs2 [31:0] $end
$scope module uut $end
$var wire 1 & CLK $end
$var wire 8 - accuracy_level [7:0] $end
$var wire 1 . busy $end
$var wire 3 / funct3 [2:0] $end
$var wire 7 0 funct7 [6:0] $end
$var wire 7 1 opcode [6:0] $end
$var wire 32 2 rs1 [31:0] $end
$var wire 32 3 rs2 [31:0] $end
$var wire 32 4 result [31:0] $end
$var parameter 32 5 MUL_APX_ACC_CONTROL $end
$var parameter 32 6 MUL_USER_DESIGN $end
$var parameter 32 7 MUL_X_EXTENISION $end
$var reg 8 8 accuracy [7:0] $end
$var reg 32 9 input_1 [31:0] $end
$var reg 32 : input_2 [31:0] $end
$var reg 32 ; mul_output [31:0] $end
$var reg 1 ! mul_unit_busy $end
$var reg 32 < operand_1 [31:0] $end
$var reg 32 = operand_2 [31:0] $end
$scope module mul $end
$var wire 1 & CLK $end
$var wire 8 > accuracy [7:0] $end
$var wire 1 . busy $end
$var wire 32 ? input_1 [31:0] $end
$var wire 32 @ input_2 [31:0] $end
$var reg 32 A output_mul [31:0] $end
$var reg 32 B result [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 7
b1 6
b1 5
b1 %
b1 $
b1 #
$end
#0
$dumpvars
bx B
bx A
b10100 @
b1010 ?
b0 >
b10100 =
b1010 <
bx ;
b10100 :
b1010 9
b0 8
bx 4
b10100 3
b1010 2
b110011 1
b1 0
b0 /
z.
b0 -
b10100 ,
b1010 +
b110011 *
b1 )
b0 (
b0 '
0&
bx "
z!
$end
#10
b11001000 "
b11001000 ;
b11001000 4
b11001000 B
b11001000 A
1&
#20
b1 8
b1 >
0&
b1 '
b1 -
#30
b11000111 "
b11000111 ;
b11000111 4
b11000111 B
b11000111 A
1&
#40
b10 8
b10 >
0&
b10 '
b10 -
#50
b11000110 "
b11000110 ;
b11000110 4
b11000110 B
b11000110 A
1&
#60
0&
