$date
	Tue Oct 03 10:01:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Multiplier_Unit_TB $end
$var wire 1 ! mul_unit_busy $end
$var wire 32 " mul_output [31:0] $end
$var parameter 32 # ACCURACY $end
$var parameter 32 $ APPROXIMATE $end
$var reg 1 % CLK $end
$var reg 8 & accuracy_level [7:0] $end
$var reg 32 ' bus_rs1 [31:0] $end
$var reg 32 ( bus_rs2 [31:0] $end
$var reg 3 ) funct3 [2:0] $end
$var reg 7 * funct7 [6:0] $end
$var reg 7 + opcode [6:0] $end
$scope module uut $end
$var wire 1 % CLK $end
$var wire 8 , accuracy_level [7:0] $end
$var wire 32 - bus_rs1 [31:0] $end
$var wire 32 . bus_rs2 [31:0] $end
$var wire 1 / busy $end
$var wire 3 0 funct3 [2:0] $end
$var wire 7 1 funct7 [6:0] $end
$var wire 7 2 opcode [6:0] $end
$var wire 32 3 result [31:0] $end
$var parameter 32 4 ACCURACY $end
$var parameter 32 5 APPROXIMATE $end
$var reg 8 6 accuracy [7:0] $end
$var reg 32 7 input_1 [31:0] $end
$var reg 32 8 input_2 [31:0] $end
$var reg 32 9 mul_output [31:0] $end
$var reg 1 ! mul_unit_busy $end
$var reg 32 : operand_1 [31:0] $end
$var reg 32 ; operand_2 [31:0] $end
$scope module mul $end
$var wire 1 % CLK $end
$var wire 8 < accuracy [7:0] $end
$var wire 1 / busy $end
$var wire 32 = input_1 [31:0] $end
$var wire 32 > input_2 [31:0] $end
$var reg 32 ? output_mul [31:0] $end
$var reg 32 @ result [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 5
b1 4
b1 $
b1 #
$end
#0
$dumpvars
bx @
bx ?
b10100 >
b1010 =
b0 <
b10100 ;
b1010 :
bx 9
b10100 8
b1010 7
b0 6
bx 3
b110011 2
b1 1
b0 0
z/
b10100 .
b1010 -
b0 ,
b110011 +
b1 *
b0 )
b10100 (
b1010 '
b0 &
0%
bx "
z!
$end
#10
b11001000 "
b11001000 9
b11001000 3
b11001000 @
b11001000 ?
1%
#20
b1 6
b1 <
0%
b1 &
b1 ,
#30
b11000111 "
b11000111 9
b11000111 3
b11000111 @
b11000111 ?
1%
#40
b10 6
b10 <
0%
b10 &
b10 ,
#50
b11000110 "
b11000110 9
b11000110 3
b11000110 @
b11000110 ?
1%
#60
0%
