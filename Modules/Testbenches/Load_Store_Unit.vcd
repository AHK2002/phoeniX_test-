$date
	Mon Nov 13 18:47:04 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Load_Store_Unit_Testbench $end
$var wire 32 ! data_memory_interface_data [31:0] $end
$var wire 32 " load_data [31:0] $end
$var wire 1 # data_memory_interface_state $end
$var wire 4 $ data_memory_interface_frame_mask [3:0] $end
$var wire 1 % data_memory_interface_enable $end
$var wire 32 & data_memory_interface_address [31:0] $end
$var parameter 32 ' CLK_PERIOD $end
$var parameter 1 ( READ $end
$var parameter 1 ) WRITE $end
$var reg 32 * address [31:0] $end
$var reg 1 + clk $end
$var reg 32 , data_memory_interface_data_reg [31:0] $end
$var reg 1 - data_memory_interface_ready $end
$var reg 3 . funct3 [2:0] $end
$var reg 7 / opcode [6:0] $end
$var reg 32 0 store_data [31:0] $end
$scope module uut $end
$var wire 32 1 address [31:0] $end
$var wire 3 2 funct3 [2:0] $end
$var wire 32 3 memory_interface_data [31:0] $end
$var wire 7 4 opcode [6:0] $end
$var wire 32 5 store_data [31:0] $end
$var parameter 1 6 READ $end
$var parameter 1 7 WRITE $end
$var reg 32 8 load_data [31:0] $end
$var reg 32 9 memory_interface_address [31:0] $end
$var reg 1 % memory_interface_enable $end
$var reg 4 : memory_interface_frame_mask [3:0] $end
$var reg 1 # memory_interface_state $end
$var reg 32 ; store_data_reg [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
17
06
1)
0(
b100 '
$end
#0
$dumpvars
bz ;
b0 :
bz 9
bz 8
bz 5
bz 4
bx 3
bz 2
bz 1
bz 0
bz /
bz .
x-
bx ,
1+
bz *
bz &
0%
b0 $
0#
bz "
bx !
$end
#2
0-
bz !
bz 3
bz ,
0+
#4
1+
#6
0+
#8
b11011110101011011100101011111110 !
b11011110101011011100101011111110 3
b11011110101011011100101011111110 ;
1#
b1111 $
b1111 :
b10000 &
b10000 9
1%
1+
b10 .
b10 2
b100011 /
b100011 4
b11011110101011011100101011111110 0
b11011110101011011100101011111110 5
b10000 *
b10000 1
#10
0+
#12
b11011110101011011011111011101111 !
b11011110101011011011111011101111 3
b11011110101011011011111011101111 ;
1#
b1111 $
b1111 :
b10100 &
b10100 9
1+
b11011110101011011011111011101111 0
b11011110101011011011111011101111 5
b10100 *
b10100 1
#14
0+
#16
bz ;
bz !
bz 3
0#
b0 $
b0 :
bz &
bz 9
0%
1+
bz .
bz 2
bz /
bz 4
bz 0
bz 5
bz *
bz 1
#18
0+
#20
0#
b1111 $
b1111 :
b10100 &
b10100 9
1%
1+
b10 .
b10 2
b11 /
b11 4
b10100 *
b10100 1
#22
0+
#24
1+
#26
0+
#28
1+
#30
0+
#32
1+
#34
0+
#36
1+
#37
b11011110101011011011111011101111 "
b11011110101011011011111011101111 8
1-
b11011110101011011011111011101111 !
b11011110101011011011111011101111 3
b11011110101011011011111011101111 ,
#38
0+
#40
0-
bz !
bz 3
bz ,
bz "
bz 8
0#
b0 $
b0 :
bz &
bz 9
0%
1+
bz .
bz 2
bz /
bz 4
bz *
bz 1
#42
0+
#44
1+
