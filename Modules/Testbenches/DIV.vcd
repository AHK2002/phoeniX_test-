$date
	Tue Oct 03 10:24:32 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Divider_Unit_TB $end
$var wire 1 ! div_unit_busy $end
$var wire 32 " div_output [31:0] $end
$var parameter 32 # ACCURACY $end
$var parameter 32 $ APPROXIMATE $end
$var reg 1 % CLK $end
$var reg 8 & accuracy_level [7:0] $end
$var reg 32 ' bus_rs1 [31:0] $end
$var reg 32 ( bus_rs2 [31:0] $end
$var reg 3 ) funct3 [2:0] $end
$var reg 7 * funct7 [6:0] $end
$var reg 7 + opcode [6:0] $end
$scope module uut $end
$var wire 1 % CLK $end
$var wire 8 , accuracy_level [7:0] $end
$var wire 32 - bus_rs1 [31:0] $end
$var wire 32 . bus_rs2 [31:0] $end
$var wire 1 / busy $end
$var wire 3 0 funct3 [2:0] $end
$var wire 7 1 funct7 [6:0] $end
$var wire 7 2 opcode [6:0] $end
$var wire 32 3 result [31:0] $end
$var parameter 32 4 ACCURACY $end
$var parameter 32 5 APPROXIMATE $end
$var reg 8 6 accuracy [7:0] $end
$var reg 32 7 div_output [31:0] $end
$var reg 1 ! div_unit_busy $end
$var reg 32 8 input_1 [31:0] $end
$var reg 32 9 input_2 [31:0] $end
$var reg 32 : operand_1 [31:0] $end
$var reg 32 ; operand_2 [31:0] $end
$scope module div $end
$var wire 1 % CLK $end
$var wire 8 < accuracy [7:0] $end
$var wire 1 / busy $end
$var wire 32 = input_1 [31:0] $end
$var wire 32 > input_2 [31:0] $end
$var reg 32 ? output_div [31:0] $end
$var reg 32 @ result [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 5
b1 4
b1 $
b1 #
$end
#0
$dumpvars
b10100 @
b10100 ?
b10100 >
b110010000 =
b0 <
b10100 ;
b110010000 :
b10100 9
b110010000 8
b10100 7
b0 6
b10100 3
b110011 2
b1 1
b100 0
z/
b10100 .
b110010000 -
b0 ,
b110011 +
b1 *
b100 )
b10100 (
b110010000 '
b0 &
0%
b10100 "
z!
$end
#10
1%
#20
b100 "
b100 7
b100 3
b100 @
b100 ?
b1100100 8
b1100100 =
b1 6
b1 <
b1100100 :
0%
b1100100 '
b1100100 -
b1 &
b1 ,
#30
1%
#40
b10111 "
b10111 7
b10111 3
b10111 @
b10111 ?
b111110100 8
b111110100 =
b10 6
b10 <
b111110100 :
0%
b111110100 '
b111110100 -
b10 &
b10 ,
#50
1%
#60
0%
