$date
	Wed Oct 11 23:05:15 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module Approximate_Accuracy_Controlable_Multiplier_TB $end
$var wire 32 ! Product [31:0] $end
$var parameter 32 " T_CLK $end
$var parameter 32 # len $end
$var reg 1 $ CLK $end
$var reg 7 % Er [6:0] $end
$var reg 16 & Multiplicand [15:0] $end
$var reg 16 ' Multiplier [15:0] $end
$var reg 32 ( Result [31:0] $end
$var reg 1 ) enable $end
$var integer 32 * i [31:0] $end
$var integer 32 + n [31:0] $end
$scope module uut $end
$var wire 1 $ CLK $end
$var wire 7 , Er [6:0] $end
$var wire 16 - Operand_1 [15:0] $end
$var wire 16 . Operand_2 [15:0] $end
$var wire 1 ) enable $end
$var wire 16 / mul_result [15:0] $end
$var parameter 3 0 reset $end
$var reg 32 1 Result [31:0] $end
$var reg 8 2 mul_input_1 [7:0] $end
$var reg 8 3 mul_input_2 [7:0] $end
$var reg 16 4 mul_result_1 [15:0] $end
$var reg 16 5 mul_result_2 [15:0] $end
$var reg 16 6 mul_result_3 [15:0] $end
$var reg 16 7 mul_result_4 [15:0] $end
$var reg 3 8 next_state [2:0] $end
$var reg 3 9 state [2:0] $end
$scope module mul $end
$var wire 1 $ CLK $end
$var wire 7 : Er [6:0] $end
$var wire 8 ; Operand_1 [7:0] $end
$var wire 8 < Operand_2 [7:0] $end
$var wire 15 = V2_Stage_1 [14:0] $end
$var wire 15 > V1_Stage_1 [14:0] $end
$var wire 15 ? SumSignal_Stage_2 [14:0] $end
$var wire 16 @ Result [15:0] $end
$var wire 11 A P6_Stage_1 [10:0] $end
$var wire 11 B P5_Stage_1 [10:0] $end
$var wire 15 C CarrySignal_Stage_2 [14:0] $end
$var reg 15 D CarrySignal_Stage_3 [14:0] $end
$var reg 11 E P5_Stage_2 [10:0] $end
$var reg 11 F P6_Stage_2 [10:0] $end
$var reg 15 G SumSignal_Stage_3 [14:0] $end
$var reg 15 H V1_Stage_2 [14:0] $end
$var reg 15 I V2_Stage_2 [14:0] $end
$scope module MS1 $end
$var wire 8 J Operand_1 [7:0] $end
$var wire 8 K Operand_2 [7:0] $end
$var wire 15 L V2 [14:0] $end
$var wire 15 M V1 [14:0] $end
$var wire 11 N P6 [10:0] $end
$var wire 11 O P5 [10:0] $end
$var wire 9 P P4 [8:0] $end
$var wire 9 Q P3 [8:0] $end
$var wire 9 R P2 [8:0] $end
$var wire 9 S P1 [8:0] $end
$scope begin genblk1[1] $end
$var parameter 2 T i $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 U i $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 V i $end
$upscope $end
$scope begin genblk1[4] $end
$var parameter 4 W i $end
$upscope $end
$scope begin genblk1[5] $end
$var parameter 4 X i $end
$upscope $end
$scope begin genblk1[6] $end
$var parameter 4 Y i $end
$upscope $end
$scope begin genblk1[7] $end
$var parameter 4 Z i $end
$upscope $end
$scope begin genblk1[8] $end
$var parameter 5 [ i $end
$upscope $end
$scope module atc_4 $end
$var wire 15 \ V2 [14:0] $end
$var wire 11 ] Q6 [10:0] $end
$var wire 11 ^ Q5 [10:0] $end
$var wire 11 _ P6 [10:0] $end
$var wire 11 ` P5 [10:0] $end
$var wire 9 a P4 [8:0] $end
$var wire 9 b P3 [8:0] $end
$var wire 9 c P2 [8:0] $end
$var wire 9 d P1 [8:0] $end
$scope module iCAC_5 $end
$var wire 11 e Q [10:0] $end
$var wire 11 f P [10:0] $end
$var wire 11 g D2_Shifted [10:0] $end
$var wire 9 h D2 [8:0] $end
$var wire 9 i D1 [8:0] $end
$var parameter 32 j SHIFT_BITS $end
$var parameter 32 k WIDTH $end
$upscope $end
$scope module iCAC_6 $end
$var wire 11 l Q [10:0] $end
$var wire 11 m P [10:0] $end
$var wire 11 n D2_Shifted [10:0] $end
$var wire 9 o D2 [8:0] $end
$var wire 9 p D1 [8:0] $end
$var parameter 32 q SHIFT_BITS $end
$var parameter 32 r WIDTH $end
$upscope $end
$upscope $end
$scope module atc_8 $end
$var wire 15 s V1 [14:0] $end
$var wire 9 t Q4 [8:0] $end
$var wire 9 u Q3 [8:0] $end
$var wire 9 v Q2 [8:0] $end
$var wire 9 w Q1 [8:0] $end
$var wire 8 x PP_8 [7:0] $end
$var wire 8 y PP_7 [7:0] $end
$var wire 8 z PP_6 [7:0] $end
$var wire 8 { PP_5 [7:0] $end
$var wire 8 | PP_4 [7:0] $end
$var wire 8 } PP_3 [7:0] $end
$var wire 8 ~ PP_2 [7:0] $end
$var wire 8 !" PP_1 [7:0] $end
$var wire 9 "" P4 [8:0] $end
$var wire 9 #" P3 [8:0] $end
$var wire 9 $" P2 [8:0] $end
$var wire 9 %" P1 [8:0] $end
$scope module iCAC_1 $end
$var wire 9 &" Q [8:0] $end
$var wire 9 '" P [8:0] $end
$var wire 9 (" D2_Shifted [8:0] $end
$var wire 8 )" D2 [7:0] $end
$var wire 8 *" D1 [7:0] $end
$var parameter 32 +" SHIFT_BITS $end
$var parameter 32 ," WIDTH $end
$upscope $end
$scope module iCAC_2 $end
$var wire 9 -" Q [8:0] $end
$var wire 9 ." P [8:0] $end
$var wire 9 /" D2_Shifted [8:0] $end
$var wire 8 0" D2 [7:0] $end
$var wire 8 1" D1 [7:0] $end
$var parameter 32 2" SHIFT_BITS $end
$var parameter 32 3" WIDTH $end
$upscope $end
$scope module iCAC_3 $end
$var wire 9 4" Q [8:0] $end
$var wire 9 5" P [8:0] $end
$var wire 9 6" D2_Shifted [8:0] $end
$var wire 8 7" D2 [7:0] $end
$var wire 8 8" D1 [7:0] $end
$var parameter 32 9" SHIFT_BITS $end
$var parameter 32 :" WIDTH $end
$upscope $end
$scope module iCAC_4 $end
$var wire 9 ;" Q [8:0] $end
$var wire 9 <" P [8:0] $end
$var wire 9 =" D2_Shifted [8:0] $end
$var wire 8 >" D2 [7:0] $end
$var wire 8 ?" D1 [7:0] $end
$var parameter 32 @" SHIFT_BITS $end
$var parameter 32 A" WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$scope module MS2 $end
$var wire 7 B" ORed_PPs [10:4] $end
$var wire 11 C" P5 [10:0] $end
$var wire 11 D" P6 [10:0] $end
$var wire 15 E" V1 [14:0] $end
$var wire 15 F" V2 [14:0] $end
$var wire 15 G" SumSignal [14:0] $end
$var wire 15 H" Q7 [14:0] $end
$var wire 15 I" P7 [14:0] $end
$var wire 15 J" CarrySignal [14:0] $end
$scope module FA_1 $end
$var wire 1 K" A $end
$var wire 1 L" B $end
$var wire 1 M" Cin $end
$var wire 1 N" Cout $end
$var wire 1 O" Sum $end
$upscope $end
$scope module FA_10 $end
$var wire 1 P" A $end
$var wire 1 Q" B $end
$var wire 1 R" Cin $end
$var wire 1 S" Cout $end
$var wire 1 T" Sum $end
$upscope $end
$scope module FA_11 $end
$var wire 1 U" A $end
$var wire 1 V" B $end
$var wire 1 W" Cin $end
$var wire 1 X" Cout $end
$var wire 1 Y" Sum $end
$upscope $end
$scope module FA_2 $end
$var wire 1 Z" A $end
$var wire 1 [" B $end
$var wire 1 \" Cin $end
$var wire 1 ]" Cout $end
$var wire 1 ^" Sum $end
$upscope $end
$scope module FA_3 $end
$var wire 1 _" A $end
$var wire 1 `" B $end
$var wire 1 a" Cin $end
$var wire 1 b" Cout $end
$var wire 1 c" Sum $end
$upscope $end
$scope module FA_4 $end
$var wire 1 d" A $end
$var wire 1 e" B $end
$var wire 1 f" Cin $end
$var wire 1 g" Cout $end
$var wire 1 h" Sum $end
$upscope $end
$scope module FA_5 $end
$var wire 1 i" A $end
$var wire 1 j" B $end
$var wire 1 k" Cin $end
$var wire 1 l" Cout $end
$var wire 1 m" Sum $end
$upscope $end
$scope module FA_6 $end
$var wire 1 n" A $end
$var wire 1 o" B $end
$var wire 1 p" Cin $end
$var wire 1 q" Cout $end
$var wire 1 r" Sum $end
$upscope $end
$scope module FA_7 $end
$var wire 1 s" A $end
$var wire 1 t" B $end
$var wire 1 u" Cin $end
$var wire 1 v" Cout $end
$var wire 1 w" Sum $end
$upscope $end
$scope module FA_8 $end
$var wire 1 x" A $end
$var wire 1 y" B $end
$var wire 1 z" Cin $end
$var wire 1 {" Cout $end
$var wire 1 |" Sum $end
$upscope $end
$scope module FA_9 $end
$var wire 1 }" A $end
$var wire 1 ~" B $end
$var wire 1 !# Cin $end
$var wire 1 "# Cout $end
$var wire 1 ## Sum $end
$upscope $end
$scope module HA_1 $end
$var wire 1 $# A $end
$var wire 1 %# B $end
$var wire 1 &# Cout $end
$var wire 1 '# Sum $end
$upscope $end
$scope module HA_2 $end
$var wire 1 (# A $end
$var wire 1 )# B $end
$var wire 1 *# Cout $end
$var wire 1 +# Sum $end
$upscope $end
$scope module iCAC_7 $end
$var wire 11 ,# D1 [10:0] $end
$var wire 11 -# D2 [10:0] $end
$var wire 15 .# Q [14:0] $end
$var wire 15 /# P [14:0] $end
$var wire 15 0# D2_Shifted [14:0] $end
$var parameter 32 1# SHIFT_BITS $end
$var parameter 32 2# WIDTH $end
$upscope $end
$upscope $end
$scope module MS3 $end
$var wire 15 3# CarrySignal [14:0] $end
$var wire 7 4# Er [6:0] $end
$var wire 15 5# SumSignal [14:0] $end
$var wire 9 6# inter_Carry [13:5] $end
$var wire 16 7# Result [15:0] $end
$scope module ECA_FA_1 $end
$var wire 1 8# A $end
$var wire 1 9# B $end
$var wire 1 :# Cin $end
$var wire 1 ;# Cout $end
$var wire 1 <# Er $end
$var wire 1 =# Sum $end
$upscope $end
$scope module ECA_FA_2 $end
$var wire 1 ># A $end
$var wire 1 ?# B $end
$var wire 1 @# Cin $end
$var wire 1 A# Cout $end
$var wire 1 B# Er $end
$var wire 1 C# Sum $end
$upscope $end
$scope module ECA_FA_3 $end
$var wire 1 D# A $end
$var wire 1 E# B $end
$var wire 1 F# Cin $end
$var wire 1 G# Cout $end
$var wire 1 H# Er $end
$var wire 1 I# Sum $end
$upscope $end
$scope module ECA_FA_4 $end
$var wire 1 J# A $end
$var wire 1 K# B $end
$var wire 1 L# Cin $end
$var wire 1 M# Cout $end
$var wire 1 N# Er $end
$var wire 1 O# Sum $end
$upscope $end
$scope module ECA_FA_5 $end
$var wire 1 P# A $end
$var wire 1 Q# B $end
$var wire 1 R# Cin $end
$var wire 1 S# Cout $end
$var wire 1 T# Er $end
$var wire 1 U# Sum $end
$upscope $end
$scope module ECA_FA_6 $end
$var wire 1 V# A $end
$var wire 1 W# B $end
$var wire 1 X# Cin $end
$var wire 1 Y# Cout $end
$var wire 1 Z# Er $end
$var wire 1 [# Sum $end
$upscope $end
$scope module ECA_FA_7 $end
$var wire 1 \# A $end
$var wire 1 ]# B $end
$var wire 1 ^# Cin $end
$var wire 1 _# Cout $end
$var wire 1 `# Er $end
$var wire 1 a# Sum $end
$upscope $end
$scope module FA_12 $end
$var wire 1 b# A $end
$var wire 1 c# B $end
$var wire 1 d# Cin $end
$var wire 1 e# Cout $end
$var wire 1 f# Sum $end
$upscope $end
$scope module FA_13 $end
$var wire 1 g# A $end
$var wire 1 h# B $end
$var wire 1 i# Cin $end
$var wire 1 j# Cout $end
$var wire 1 k# Sum $end
$upscope $end
$scope module FA_14 $end
$var wire 1 l# A $end
$var wire 1 m# B $end
$var wire 1 n# Cin $end
$var wire 1 o# Cout $end
$var wire 1 p# Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1011 2#
b100 1#
b1000 A"
b1 @"
b1000 :"
b1 9"
b1000 3"
b1 2"
b1000 ,"
b1 +"
b1001 r
b10 q
b1001 k
b10 j
b1000 [
b111 Z
b110 Y
b101 X
b100 W
b11 V
b10 U
b1 T
b0 0
b10000 #
b10100 "
$end
#0
$dumpvars
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
1`#
x_#
x^#
x]#
x\#
x[#
1Z#
xY#
xX#
xW#
xV#
xU#
1T#
xS#
xR#
xQ#
xP#
xO#
1N#
xM#
xL#
xK#
xJ#
xI#
1H#
xG#
xF#
xE#
xD#
xC#
1B#
xA#
x@#
x?#
x>#
x=#
1<#
x;#
0:#
x9#
x8#
bx 7#
bx 6#
bx 5#
b1111111 4#
bx00 3#
bx0000 0#
bx /#
b0xxxxxxx0000 .#
bx -#
bx ,#
x+#
x*#
x)#
x(#
x'#
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
bx00 J"
bx I"
b0xxxxxxx0000 H"
bx G"
bx00 F"
bx0 E"
bx D"
bx C"
bx B"
bx ?"
bx >"
bx0 ="
bx <"
b0xxxxxxx0 ;"
bx 8"
bx 7"
bx0 6"
bx 5"
b0xxxxxxx0 4"
bx 1"
bx 0"
bx0 /"
bx ."
b0xxxxxxx0 -"
bx *"
bx )"
bx0 ("
bx '"
b0xxxxxxx0 &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
b0xxxxxxx0 w
b0xxxxxxx0 v
b0xxxxxxx0 u
b0xxxxxxx0 t
b0xxxxxxxxxxxxx0 s
bx p
bx o
bx00 n
bx m
b0xxxxxxx00 l
bx i
bx h
bx00 g
bx f
b0xxxxxxx00 e
bx d
bx c
bx b
bx a
bx `
bx _
b0xxxxxxx00 ^
b0xxxxxxx00 ]
b0xxxxxxxxxxx00 \
bx S
bx R
bx Q
bx P
bx O
bx N
b0xxxxxxxxxxxxx0 M
b0xxxxxxxxxxx00 L
bx K
bx J
bx00 I
bx0 H
bx G
bx F
bx E
bx00 D
bx00 C
bx B
bx A
bx @
bx ?
b0xxxxxxxxxxxxx0 >
b0xxxxxxxxxxx00 =
bx <
bx ;
b1111111 :
b0 9
b1 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx /
bx .
bx -
b1111111 ,
b10100 +
b0 *
0)
bx (
bx '
bx &
b1111111 %
1$
bx !
$end
#10
0$
#20
b0xxxxxxxxxxx00 I
b0xxxxxxxxxxx00 F"
b0xxxxxxxxxxxxx0 H
b0xxxxxxxxxxxxx0 E"
1$
#30
0$
#40
1$
#50
0$
#55
1)
#60
b0 =
b0 L
b0 \
b0 ^
b0 e
b0 >
b0 M
b0 s
b0 ]
b0 l
b0 w
b0 &"
b100100 B
b100100 O
b100100 `
b100100 f
b0 v
b0 -"
b0 g
b0 u
b0 4"
b100100000 A
b100100000 N
b100100000 _
b100100000 m
b0 t
b0 ;"
b100100000 n
b100100 S
b100100 d
b100100 i
b100100 %"
b100100 '"
b0 ("
b0 R
b0 c
b0 h
b0 $"
b0 ."
b0 /"
b0 Q
b0 b
b0 p
b0 #"
b0 5"
b0 6"
b1001000 P
b1001000 a
b1001000 o
b1001000 ""
b1001000 <"
b1001000 ="
b100100 !"
b100100 *"
b0 ~
b0 )"
b0 }
b0 1"
b0 |
b0 0"
b0 {
b0 8"
b0 z
b0 7"
b0 y
b0 ?"
b100100 x
b100100 >"
b10000001 3
b10000001 <
b10000001 K
b100100 2
b100100 ;
b100100 J
b1 9
b10 8
b10011100111011111111100100100 (
b101111010000001 '
b101111010000001 .
b11010100100100 &
b11010100100100 -
1$
#70
0$
#80
b110101000 A
b110101000 N
b110101000 _
b110101000 m
b110101000 n
b1101010 P
b1101010 a
b1101010 o
b1101010 ""
b1101010 <"
b110101 B
b110101 O
b110101 `
b110101 f
b110101 S
b110101 d
b110101 i
b110101 %"
b110101 '"
b1101010 ="
b110101 !"
b110101 *"
b110101 x
b110101 >"
b110101 2
b110101 ;
b110101 J
0g"
0##
1|"
0w"
0r"
0m"
0c"
1h"
0"#
0{"
0v"
0q"
0l"
0b"
1Y"
0T"
0N"
0]"
0S"
0X"
0+#
0}"
1x"
0s"
0n"
0i"
0_"
0e"
0a"
0f"
0k"
0p"
0u"
0z"
0!#
0(#
1U"
0P"
1d"
0~"
0y"
0t"
0o"
0j"
0`"
1O"
0^"
b0 B"
0'#
0&#
b0 C
b0 J"
0*#
0Z"
1K"
0$#
b1001000100100 ?
b1001000100100 G"
b0 H"
b0 .#
0M"
0\"
0R"
0W"
0%#
0L"
0["
0Q"
0V"
0)#
b1001000000000 0#
b1001000100100 I"
b1001000100100 /#
b11 8
b0 I
b0 F"
b0 H
b0 E"
b100100000 F
b100100000 D"
b100100000 -#
b100100 E
b100100 C"
b100100 ,#
b10 9
1$
#90
0$
#100
b0 =
b0 L
b0 \
b0 ]
b0 l
b10110100 A
b10110100 N
b10110100 _
b10110100 m
b110110000 g
b10010000 n
b1101100 R
b1101100 c
b1101100 h
b1101100 $"
b1101100 ."
b100100 Q
b100100 b
b100100 p
b100100 #"
b100100 5"
b100100 P
b100100 a
b100100 o
b100100 ""
b100100 <"
b1001000 ("
b1001000 /"
b111111000 B
b111111000 O
b111111000 `
b111111000 f
b100100 ~
b100100 )"
b100100 }
b100100 1"
b100100 |
b100100 0"
b100100 {
b100100 8"
b100100 y
b100100 ?"
b1001000 S
b1001000 d
b1001000 i
b1001000 %"
b1001000 '"
b0 ="
b0 !"
b0 *"
b0 x
b0 >"
b1001000100100 4
b1011110 3
b1011110 <
b1011110 K
b100100 2
b100100 ;
b100100 J
0[#
0k#
0X#
0i#
1U#
0S#
0e#
0C#
0I#
0O#
0a#
1f#
1r"
0@#
0F#
0L#
0R#
0^#
0d#
0p#
1T"
1c"
0;#
0A#
0G#
0M#
0Y#
0_#
0n#
1=#
1n"
b0 6#
0j#
0o#
1P"
1_"
b1101010110101 ?
b1101010110101 G"
b100 8
09#
0?#
0E#
0K#
0Q#
0W#
0]#
0c#
0h#
0m#
b1001000100100 /
b1001000100100 @
b1001000100100 7#
18#
0>#
0D#
0J#
1P#
0V#
0\#
1b#
0g#
0l#
b1101010000000 0#
b1101010110101 I"
b1101010110101 /#
b11 9
b0 D
b0 3#
b1001000100100 G
b1001000100100 5#
b110101000 F
b110101000 D"
b110101000 -#
b110101 E
b110101 C"
b110101 ,#
1$
#110
0$
#120
b10000000 >
b10000000 M
b10000000 s
b101101000 =
b101101000 L
b101101000 \
b1101000 ^
b1101000 e
b111111110 B
b111111110 O
b111111110 `
b111111110 f
b10100 ]
b10100 l
b1101010 S
b1101010 d
b1101010 i
b1101010 %"
b1101010 '"
b100000 v
b100000 -"
b111111100 g
b11110101 A
b11110101 N
b11110101 _
b11110101 m
b11010100 n
b1101010 ("
b1111111 R
b1111111 c
b1111111 h
b1111111 $"
b1111111 ."
b1101010 /"
b110101 Q
b110101 b
b110101 p
b110101 #"
b110101 5"
b110101 P
b110101 a
b110101 o
b110101 ""
b110101 <"
b110101 ~
b110101 )"
b110101 }
b110101 1"
b110101 |
b110101 0"
b110101 {
b110101 8"
b110101 y
b110101 ?"
b1101010110101 5
b110101 2
b110101 ;
b110101 J
1v"
1l"
b1010000000 C
b1010000000 J"
0q"
0Y"
0w"
0m"
1r"
1t"
1j"
1^"
0O"
1I#
1a#
0U"
1s"
1i"
0o"
1Z"
0K"
b101010111000 ?
b101010111000 G"
b101000000 H"
b101000000 .#
b101101000000 0#
b101111111000 I"
b101111111000 /#
b1101010110101 /
b1101010110101 @
b1101010110101 7#
1D#
1\#
b101 8
b10110100 F
b10110100 D"
b10110100 -#
b111111000 E
b111111000 C"
b111111000 ,#
b1101010110101 G
b1101010110101 5#
b100 9
1$
#130
0$
#140
b110100111000 6
1O#
1[#
1b"
1g"
1q"
1##
0c"
1L#
1X#
0I#
1G#
0U#
b10100 6#
1S#
b1111110000 C
b1111110000 J"
1]"
0h"
1m"
0r"
1w"
1}"
1`"
1O"
0f#
1f"
1k"
1p"
1u"
b101010000 H"
b101010000 .#
1'#
b111101000110 ?
b111101000110 G"
0^"
b11110 B"
1K"
1$#
b110 8
1E#
1Q#
b110100111000 /
b110100111000 @
b110100111000 7#
0b#
1\"
b111101010000 0#
b111111111110 I"
b111111111110 /#
b101 9
b1010000000 D
b1010000000 3#
b101010111000 G
b101010111000 5#
b101101000 I
b101101000 F"
b10000000 H
b10000000 E"
b11110101 F
b11110101 D"
b11110101 -#
b111111110 E
b111111110 C"
b111111110 ,#
1$
#150
0$
#160
b1001100110110 7
1f#
1d#
0a#
1_#
1O#
1U#
0[#
1F#
1A#
0I#
1L#
1R#
1^#
1G#
1M#
b1111110 6#
1Y#
19#
1?#
1K#
b1001100110110 /
b1001100110110 @
b1001100110110 7#
08#
1>#
0D#
1J#
1V#
b111 8
b1111110000 D
b1111110000 3#
b111101000110 G
b111101000110 5#
b110 9
1$
#170
0$
#180
b10011010111011111111100100100 !
b10011010111011111111100100100 1
bx 8
b111 9
1$
#190
0$
#200
bx 9
1$
#210
0$
#220
1$
